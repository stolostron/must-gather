#! /bin/bash

BASE_COLLECTION_PATH=${BASE_COLLECTION_PATH:-"./must-gather"}

# log produces a formatted log string with component, level, and message positional arguments:
# - 1 argument:  Log message (default log level)
# - 2 arguments: Custom log level and message
log() {
  lvl="${1}"
  msg="${2}"

  if [[ "$#" == "1" ]]; then
    msg="${1}"
    lvl="INFO"
  fi

  case ${lvl} in
    INFO | WARN | DEBUG | ERROR);;
    *) lvl="INFO";;
  esac

  printf "%s\tacm-must-gather\t%s\n" "${lvl}" "${msg}"
}

# run_inspect wraps `oc adm inspect` by logging the args and running it with common flags
run_inspect() {
  args="$*"
  log "Inspecting ${args}"
  # shellcheck disable=SC2086
  # - BASE_COLLECTION_PATH can't be quoted because `oc` reads the quotes as part of the path
  oc adm inspect --dest-dir=${BASE_COLLECTION_PATH} "$@"
}

# parse_args parses the arguments passed to the must-gather in the form of <key>=<value>.
# NOTE: Currently this only applies to the Hypershift must-gather.
parse_args() {
  # get the hosted cluster name and optionally namespace
  while [ "${1}" != "" ]; do
    local key value
    key=${1%=*}
    value=${1#*=}
    case ${key} in
    hosted-cluster-name) # Get the hosted cluster name
      export HC_NAME=${value}
      ;;
    hosted-cluster-namespace) # Get the hosted cluster namespace
      export HC_NAMESPACE=${value}
      ;;
    *)
      log "ERROR" "unknown parameter \"${key}\""
      exit 1
      ;;
    esac
    shift
  done
}
